import itertools


def get_value(word, substitution):            #The function get_value computes the resulting integer value after substituting all letters in word with their associated numbers. 
    s = 0                             #the words are converted to letters and then to numbers.
    factor = 1                           #the values are substituted.
    for letter in reversed(word):               #it computes the result
        s += factor * substitution[letter]
        factor *= 10
    return s


def solve2(equation):                                              
    # split equation in left and right                            # took solve2 method as a starting point and implemented a simple parser 
    left, right = equation.lower().replace(' ', '').split('=')
    # split words in left part
    left = left.split('+')
    # create list of used letters
    letters = set(right)
    for word in left:
        for letter in word:
            letters.add(letter)
    letters = list(letters)

    digits = range(10)
    for perm in itertools.permutations(digits, len(letters)):
        sol = dict(zip(letters, perm))

        if sum(get_value(word, sol) for word in left) == get_value(right, sol):
            print(' + '.join(str(get_value(word, sol)) for word in left) + " = {} (mapping: {})".format(get_value(right, sol), sol))

if __name__ == '__main__':
    solve2('POINT + ZERO = ENERGY')
